package org.example


fun main() {
    // ===== 프로그램 실행 순서: 위에서 아래로 한 줄씩 순차적으로 실행됩니다 =====

    println("Hello World")        // 1번째 실행되는 문장

    // ===== 표현식(Expression) 예시들 =====
    // 표현식: 계산해서 하나의 값을 만들어내는 것

    val result1 = 10 + 5          // 2번째 실행: 10 + 5는 표현식 (결과값: 15)
    val result2 = "안녕" + "하세요"  // 3번째 실행: 문자열 연결 표현식 (결과값: "안녕하세요")
    val result3 = 20 > 15         // 4번째 실행: 비교 표현식 (결과값: true)

    // ===== 문장(Statement) 예시들 =====
    // 문장: 값을 만들어내지 않고, 어떤 동작을 수행하는 명령

    println("계산 결과들을 출력합니다:") // 5번째 실행: 출력 동작을 수행하는 문장

    // ===== 표현식과 문장이 함께 사용되는 경우 =====

    println(result1)              // 6번째 실행: 전체는 문장, result1은 표현식
    println(result2)              // 7번째 실행: 전체는 문장, result2는 표현식
    println(result3)              // 8번째 실행: 전체는 문장, result3은 표현식

    // 더 복잡한 예시: 표현식 안에 표현식이 포함된 경우
    println(5 * 3 + 2)           // 9번째 실행:
    // - 5 * 3은 표현식 (결과: 15)
    // - 15 + 2는 표현식 (결과: 17)
    // - println()은 문장 (17을 출력하는 동작)

    // 변수 할당 문장 vs 표현식
    val x = 100                  // 10번째 실행: 전체는 문장 (값을 변수에 저장하는 동작)
    // 100은 표현식 (값 자체)

    val y = x * 2                // 11번째 실행: 전체는 문장
    // x * 2는 표현식 (결과: 200)

    // 표현식만으로는 문장이 될 수 없는 예시
    // 42                        // 이것만 있으면 의미없음 (값은 있지만 사용되지 않음)
    // "Hello"                   // 이것만 있으면 의미없음

    // 조건식도 표현식입니다
    val message = if (y > 150) "크다" else "작다"  // 12번째 실행:
    // - y > 150은 표현식
    // - if문 전체도 표현식 (결과: "크다")
    // - 전체는 문장

    println(message)             // 13번째 실행: 출력 문장

    println("프로그램 종료!")     // 14번째 실행: 마지막 문장

    // ===== 요약 =====
    // 1. 프로그램은 위에서 아래로 순차적으로 실행됩니다
    // 2. 표현식: 값을 계산해서 결과를 만들어냄 (10+5, "안녕"+"하세요")
    // 3. 문장: 어떤 동작을 수행함 (println(), val x = 10)
    // 4. 문장 안에 표현식이 포함될 수 있습니다
    // 5. 표현식의 결과는 다른 곳에서 사용되지만, 문장의 결과는 사용되지 않습니다
}
package conditionals

/**
 * 날짜: 2025-09-14
 * 주제: Range (범위) 연산
 *
 * 배운 내용:
 * - Range는 연속된 값들의 집합을 나타내는 Kotlin의 편리한 기능
 * - 닫힌 범위(a..b)와 열린 범위(a..<b)의 차이점
 * - in, !in 키워드를 사용한 범위 포함 여부 확인
 * - 숫자, 문자, 문자열 등 다양한 데이터 타입에서 범위 사용 가능
 * - when 표현식과 조건문에서 범위를 활용한 깔끔한 조건 처리
 *
 * 어려웠던 점:
 * - 닫힌 범위와 열린 범위의 경계값 포함/제외 개념
 * - 문자열 범위에서 사전식 순서 비교 방식 이해
 * - 복잡한 조건에서 논리 연산자와 범위를 조합하는 방법
 */
fun main() {

    val a = 0
    val b = 1
    val c = 2

    /*************** - 기본 개념 비교 - ****************/
    // 기존 방식: 복잡하고 읽기 어려운 조건문
    val within = a <= c && c <= b

    // Range 사용: 직관적이고 간결한 표현
    val within1 = c in a..b

    /*************** - 닫힌 범위 (Closed Range: a..b) - ****************/
    // 시작값과 끝값을 모두 포함하는 범위
    // 5..15는 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15를 모두 포함

    println(5 in 5..15)  // true (5는 5 이상 15 이하에 포함)
    println(12 in 5..15) // true (12는 5 이상 15 이하에 포함)
    println(15 in 5..15) // true (15는 5 이상 15 이하에 포함)
    println(20 in 5..15) // false (20은 5 이상 15 이하에 포함되지 않음)

    /*************** - 열린 범위 (Open Range: a..<b) - ****************/
    // 시작값은 포함하지만 끝값은 제외하는 범위
    // 5..<15는 5, 6, 7, 8, 9, 10, 11, 12, 13, 14를 포함 (15 제외)

    println(5 in 5..<15)  // true (5는 5 이상 15 미만에 포함)
    println(15 in 5..<15) // false (15는 5 이상 15 미만에 포함되지 않음)

    /*************** - 범위 연산 활용법 - ****************/

    // 부정 연산자(!in): 값이 범위에 포함되지 않는지 확인
    val notWithin = 100 !in 10..99 // true (100은 10~99 범위에 없음)

    // 논리 연산자와 결합: 여러 범위를 OR/AND로 조합
    val within2 = c in 5..10 || c in 20..30 || c in 40..50
    // c가 5~10, 20~30, 40~50 중 어느 한 범위에 속하면 true

    // 범위를 변수에 저장: 재사용 가능한 범위 정의
    val range = 100..200
    println(300 in range) // false (300은 100~200 범위에 없음)
    println(150 in range) // true (150은 100~200 범위에 있음)

    /*************** - 다양한 데이터 타입의 범위 - ****************/

    // 문자 범위: 알파벳 순서로 범위 비교
    println('b' in 'a'..'c') // true ('b'는 'a'와 'c' 사이에 있음)
    println('k' in 'a'..'e') // false ('k'는 'a'와 'e' 사이에 없음)

    // 문자열 범위: 사전식(lexicographic) 순서로 범위 비교
    println("hello" in "he".."hi") // true ("hello"는 "he"와 "hi" 사이)
    println("abc" in "aab".."aac") // false ("abc"는 "aab"와 "aac" 사이에 없음)

    /*************** - 실제 활용 예시 - ****************/

    // when 표현식에서 범위 활용: 성적 등급 계산
    val score = 85
    val grade = when (score) {
        in 90..100 -> "A"    // 90점 이상 100점 이하
        in 80..89 -> "B"     // 80점 이상 89점 이하
        in 70..79 -> "C"     // 70점 이상 79점 이하
        in 60..69 -> "D"     // 60점 이상 69점 이하
        else -> "F"          // 60점 미만
    }

    // if 조건문에서 범위 활용: 나이 검증
    val age = 25
    if (age in 18..65) {
        println("근로 가능 연령입니다")
    }

    // 온도 범위 체크: 적정 온도 판단
    val temperature = 23
    if (temperature in 20..26) {
        println("적정 실내 온도입니다")
    }
}